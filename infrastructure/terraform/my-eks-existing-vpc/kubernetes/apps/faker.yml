# 🚀 Dashboard de Monitoramento Kubernetes
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-dashboard
  labels:
    app: k8s-dashboard
spec:
  replicas: 2
  selector:
    matchLabels:
      app: k8s-dashboard
  template:
    metadata:
      labels:
        app: k8s-dashboard
    spec:
      containers:
      - name: dashboard
        image: httpd:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: dashboard-content
          mountPath: /usr/local/apache2/htdocs
      volumes:
      - name: dashboard-content
        configMap:
          name: dashboard-html

---
# 🎨 Aplicação de API em Python
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-api
  labels:
    app: python-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: python-api
  template:
    metadata:
      labels:
        app: python-api
    spec:
      containers:
      - name: api
        image: python:3.11-slim
        ports:
        - containerPort: 8000
        command: ["/bin/sh"]
        args:
          - -c
          - |
            pip install flask flask-cors requests &&
            python /app/api.py
        volumeMounts:
        - name: api-code
          mountPath: /app
        env:
        - name: FLASK_ENV
          value: "production"
      volumes:
      - name: api-code
        configMap:
          name: python-api-code

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dashboard-html
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="pt-BR">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>🚀 K8s Dashboard - EKS Cluster</title>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
        <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                padding: 20px;
            }
            .container { max-width: 1200px; margin: 0 auto; }
            .header {
                background: rgba(255,255,255,0.1);
                backdrop-filter: blur(10px);
                border-radius: 20px;
                padding: 30px;
                text-align: center;
                margin-bottom: 30px;
                border: 1px solid rgba(255,255,255,0.2);
            }
            .header h1 {
                color: white;
                font-size: 2.5em;
                margin-bottom: 10px;
                text-shadow: 0 2px 4px rgba(0,0,0,0.3);
            }
            .header p { color: rgba(255,255,255,0.9); font-size: 1.2em; }
            .grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                gap: 20px;
                margin-bottom: 30px;
            }
            .card {
                background: rgba(255,255,255,0.95);
                border-radius: 15px;
                padding: 25px;
                box-shadow: 0 8px 32px rgba(0,0,0,0.1);
                border: 1px solid rgba(255,255,255,0.2);
                transition: transform 0.3s ease;
            }
            .card:hover { transform: translateY(-5px); }
            .card-header {
                display: flex;
                align-items: center;
                margin-bottom: 15px;
            }
            .card-icon {
                font-size: 2em;
                margin-right: 15px;
                width: 50px;
                text-align: center;
            }
            .card-title { font-size: 1.4em; font-weight: 600; }
            .status { 
                display: inline-block;
                padding: 5px 12px;
                border-radius: 20px;
                font-size: 0.9em;
                font-weight: 600;
                margin: 5px 0;
            }
            .status.online { background: #d4edda; color: #155724; }
            .status.warning { background: #fff3cd; color: #856404; }
            .metric {
                display: flex;
                justify-content: space-between;
                padding: 8px 0;
                border-bottom: 1px solid #eee;
            }
            .metric:last-child { border-bottom: none; }
            .btn {
                display: inline-block;
                padding: 10px 20px;
                background: linear-gradient(45deg, #667eea, #764ba2);
                color: white;
                text-decoration: none;
                border-radius: 25px;
                margin: 5px;
                transition: all 0.3s ease;
                font-weight: 600;
            }
            .btn:hover { transform: scale(1.05); box-shadow: 0 5px 15px rgba(0,0,0,0.2); }
            .terminal {
                background: #1e1e1e;
                color: #00ff00;
                padding: 20px;
                border-radius: 10px;
                font-family: 'Courier New', monospace;
                margin-top: 20px;
                overflow-x: auto;
            }
            .blink { animation: blink 1s infinite; }
            @keyframes blink { 50% { opacity: 0; } }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1><i class="fas fa-dharmachakra"></i> Kubernetes Dashboard</h1>
                <p>Monitoramento em Tempo Real do Cluster EKS</p>
                <div class="status online">🟢 Cluster Online</div>
            </div>

            <div class="grid">
                <div class="card">
                    <div class="card-header">
                        <div class="card-icon" style="color: #4285f4;">
                            <i class="fas fa-server"></i>
                        </div>
                        <div class="card-title">Status do Cluster</div>
                    </div>
                    <div class="metric">
                        <span>Nodes Ativos:</span>
                        <strong style="color: #28a745;">3/3</strong>
                    </div>
                    <div class="metric">
                        <span>Pods Running:</span>
                        <strong style="color: #28a745;">8/8</strong>
                    </div>
                    <div class="metric">
                        <span>Services:</span>
                        <strong style="color: #17a2b8;">4</strong>
                    </div>
                    <div class="metric">
                        <span>Ingress:</span>
                        <strong style="color: #17a2b8;">1</strong>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <div class="card-icon" style="color: #ff6b6b;">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <div class="card-title">Performance</div>
                    </div>
                    <div class="metric">
                        <span>CPU Usage:</span>
                        <strong style="color: #28a745;">23%</strong>
                    </div>
                    <div class="metric">
                        <span>Memory Usage:</span>
                        <strong style="color: #ffc107;">67%</strong>
                    </div>
                    <div class="metric">
                        <span>Network I/O:</span>
                        <strong style="color: #17a2b8;">1.2MB/s</strong>
                    </div>
                    <div class="metric">
                        <span>Load Balancer:</span>
                        <strong style="color: #28a745;">Healthy</strong>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <div class="card-icon" style="color: #4ecdc4;">
                            <i class="fas fa-cloud"></i>
                        </div>
                        <div class="card-title">AWS Resources</div>
                    </div>
                    <div class="metric">
                        <span>Region:</span>
                        <strong>us-east-1</strong>
                    </div>
                    <div class="metric">
                        <span>VPC:</span>
                        <strong>vpc-eks-demo</strong>
                    </div>
                    <div class="metric">
                        <span>Subnets:</span>
                        <strong>6 (3 Public + 3 Private)</strong>
                    </div>
                    <div class="metric">
                        <span>Load Balancer:</span>
                        <strong>NLB Active</strong>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <div class="card-icon" style="color: #9b59b6;">
                            <i class="fas fa-rocket"></i>
                        </div>
                        <div class="card-title">Aplicações</div>
                    </div>
                    <div class="metric">
                        <span>Frontend:</span>
                        <strong style="color: #28a745;">Running</strong>
                    </div>
                    <div class="metric">
                        <span>Python API:</span>
                        <strong style="color: #28a745;">Running</strong>
                    </div>
                    <div class="metric">
                        <span>Ingress Controller:</span>
                        <strong style="color: #28a745;">Active</strong>
                    </div>
                    <div class="metric">
                        <span>Auto Scaling:</span>
                        <strong style="color: #17a2b8;">Enabled</strong>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <div class="card-icon" style="color: #e74c3c;">
                        <i class="fas fa-link"></i>
                    </div>
                    <div class="card-title">Links Rápidos</div>
                </div>
                <a href="/api/health" class="btn">🔍 API Health Check</a>
                <a href="/api/metrics" class="btn">📊 Métricas da API</a>
                <a href="/api/cluster-info" class="btn">🏗️ Info do Cluster</a>
                <a href="https://github.com" class="btn">📁 Repositório</a>
            </div>

            <div class="terminal">
                <div>$ kubectl get pods --all-namespaces</div>
                <div>NAMESPACE       NAME                           READY   STATUS    RESTARTS   AGE</div>
                <div>default         k8s-dashboard-xxx-xxx          1/1     Running   0          5m</div>
                <div>default         python-api-xxx-xxx             1/1     Running   0          5m</div>
                <div>ingress-nginx   ingress-nginx-controller-xxx   1/1     Running   0          10m</div>
                <div>kube-system     aws-node-xxx                   1/1     Running   0          15m</div>
                <div>$ <span class="blink">█</span></div>
            </div>
        </div>

        <script>
            // Simulação de atualização em tempo real
            setInterval(() => {
                const timestamp = new Date().toLocaleTimeString();
                document.title = `🚀 K8s Dashboard - ${timestamp}`;
            }, 1000);
        </script>
    </body>
    </html>

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: python-api-code
data:
  api.py: |
    from flask import Flask, jsonify, request
    from flask_cors import CORS
    import json
    import datetime
    import random
    import os

    app = Flask(__name__)
    CORS(app)

    @app.route('/')
    def home():
        return jsonify({
            "message": "🐍 Python API Running on Kubernetes!",
            "status": "healthy",
            "timestamp": datetime.datetime.now().isoformat(),
            "pod_info": {
                "hostname": os.getenv('HOSTNAME', 'unknown'),
                "version": "1.0.0"
            }
        })

    @app.route('/health')
    def health():
        return jsonify({
            "status": "healthy",
            "timestamp": datetime.datetime.now().isoformat(),
            "uptime": "5m 32s",
            "checks": {
                "database": "connected",
                "cache": "available",
                "external_api": "reachable"
            }
        })

    @app.route('/metrics')
    def metrics():
        return jsonify({
            "cpu_usage": f"{random.randint(15, 45)}%",
            "memory_usage": f"{random.randint(40, 80)}%",
            "requests_per_minute": random.randint(50, 200),
            "response_time_avg": f"{random.randint(50, 150)}ms",
            "active_connections": random.randint(10, 50),
            "timestamp": datetime.datetime.now().isoformat()
        })

    @app.route('/cluster-info')
    def cluster_info():
        return jsonify({
            "cluster": {
                "name": "eks-demo-cluster",
                "version": "1.28",
                "region": "us-east-1",
                "nodes": 3,
                "pods": 8,
                "services": 4
            },
            "infrastructure": {
                "vpc": "vpc-eks-demo",
                "load_balancer": "NLB",
                "ingress": "nginx",
                "auto_scaling": True
            },
            "timestamp": datetime.datetime.now().isoformat()
        })

    @app.route('/data')
    def get_data():
        return jsonify({
            "users": [
                {"id": 1, "name": "João Silva", "email": "joao@email.com", "status": "active"},
                {"id": 2, "name": "Maria Santos", "email": "maria@email.com", "status": "active"},
                {"id": 3, "name": "Pedro Lima", "email": "pedro@email.com", "status": "inactive"}
            ],
            "statistics": {
                "total_users": 3,
                "active_users": 2,
                "new_signups_today": 1
            }
        })

    if __name__ == '__main__':
        app.run(host='0.0.0.0', port=8000, debug=False)

---
# 🌐 Service para Dashboard
apiVersion: v1
kind: Service
metadata:
  name: dashboard-service
spec:
  type: ClusterIP
  selector:
    app: k8s-dashboard
  ports:
    - port: 80
      targetPort: 80

---
# 🐍 Service para Python API
apiVersion: v1
kind: Service
metadata:
  name: python-api-service
spec:
  type: ClusterIP
  selector:
    app: python-api
  ports:
    - port: 8000
      targetPort: 8000